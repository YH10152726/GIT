Sub RunModule5_Then_Module7()
    ' --- 処理開始時の設定 ---
    Dim startTime As Double
    startTime = Timer
    
    ' 画面のちらつきを抑え、処理を高速化します
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    ' ★追加点1：イベントの発生を一時的に停止する
    Application.EnableEvents = False
    
    ' エラーが発生した場合に備えます
    On Error GoTo ErrorHandler
    
    ' --- ステップ1の実行 ---
    Call ProcessAndSortAllSimultaneousItems
    
    ' --- ステップ2の実行 ---
    Call OrganizeProcessSheet
    
' --- 処理終了 ---
Finally:
    Application.EnableEvents = True
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    
    Debug.Print "全処理時間: " & Format(Timer - startTime, "0.00") & "秒"
    Exit Sub

' --- エラー処理 ---
ErrorHandler:
    ' 処理が正常に完了した場合はメッセージを表示しませんが、
    ' 万が一エラーが発生した場合は、原因を特定するためにこのメッセージが表示されます。
    MsgBox "処理中にエラーが発生しました。" & vbCrLf & vbCrLf & _
           "エラー番号: " & Err.Number & vbCrLf & _
           "エラー内容: " & Err.Description, vbCritical
    Resume Finally
End Sub

