Option Explicit

Private Const SHEET_KOUTEIHYO_NAME As String = "工程表" ' 対象シート名
Private Const COL_Y_DOUJI As String = "Y" ' 「同時」情報がある列
Private Const COL_AG_HINBAN As String = "AG" ' 品番がある列

' ====================================================================================
' メイン処理： このマクロをボタンに登録する
' ====================================================================================
Sub ProcessAndSortAllSimultaneousItems()
    Dim startTime As Double
    startTime = Timer
    Dim originalCalcState As XlCalculation
    
    originalCalcState = Application.Calculation
    Application.Calculation = xlCalculationManual
    Application.ScreenUpdating = False ' 全体を通してオフに

    On Error GoTo ErrorHandler_OverallProcess

    'ステップ1のメッセージを削除
    Call SortDoujiKouteiUnderHinban ' 第1段階

    'ステップ2のメッセージを削除
    Call SortGroupedItemsByTheirOwnAG ' 第2段階
    
    '完了メッセージを削除

Finally_OverallProcess:
    Application.ScreenUpdating = True
    Application.Calculation = originalCalcState
    Debug.Print "全処理時間: " & Format(Timer - startTime, "0.00") & "秒"
    Exit Sub

ErrorHandler_OverallProcess:
    ' エラー発生時のメッセージは原因究明のため残します
    MsgBox "全体の処理中にエラーが発生しました。" & vbCrLf & _
           "エラー番号: " & Err.Number & vbCrLf & _
           "エラー内容: " & Err.Description, vbCritical
    Resume Finally_OverallProcess
End Sub

' ====================================================================================
' ★★★修正版マクロ (ステップ1)★★★
' 安全装置と進捗表示を追加した、より堅牢なバージョン
' ====================================================================================
Sub SortDoujiKouteiUnderHinban()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim hinbanToFind As String
    Dim parentHeaderRow As Long
    Dim parentBlockEndRow As Long
    Dim childHeaderRow As Long
    Dim childBlockEndRow As Long
    Dim regExY As Object, regExAG As Object, matches As Object
    
    Dim movedInPass As Boolean
    
    ' ★★★変更点1: 無限ループ防止用のカウンターを追加★★★
    Dim loopCounter As Long
    Dim maxLoops As Long

    On Error GoTo ErrorHandler_SortDouji
    
    Set ws = ThisWorkbook.Sheets(SHEET_KOUTEIHYO_NAME)
    
    Set regExY = CreateObject("VBScript.RegExp")
    regExY.pattern = "(\d+)と?同時|同時(\d+)"
    Set regExAG = CreateObject("VBScript.RegExp")
    regExAG.pattern = "^(\d+)"

    Application.ScreenUpdating = False
    
    ' ★★★変更点2: ループ回数の上限を設定★★★
    ' (シートの行数 x 2) を超えるループは異常とみなす
    maxLoops = ws.UsedRange.Rows.Count * 2
    loopCounter = 0

    Do
        loopCounter = loopCounter + 1
        ' ★★★変更点3: 無限ループのチェック★★★
        If loopCounter > maxLoops Then
            MsgBox "処理の繰り返し回数が上限を超えました。" & vbCrLf & _
                   "データの親子関係が循環しているなど、" & vbCrLf & _
                   "問題がある可能性があります。処理を中断します。", vbCritical
            GoTo Finally_SortDouji ' 処理を抜ける
        End If
        
        ' ★★★変更点4: ステータスバーに進捗を表示し、DoEventsで応答性を確保★★★
        Application.StatusBar = "「同時」工程を整頓中... (パス " & loopCounter & " 回目)"
        DoEvents

        movedInPass = False
        
        lastRow = ws.Cells(ws.Rows.Count, COL_AG_HINBAN).End(xlUp).Row
        If ws.Cells(ws.Rows.Count, COL_Y_DOUJI).End(xlUp).Row > lastRow Then
            lastRow = ws.Cells(ws.Rows.Count, COL_Y_DOUJI).End(xlUp).Row
        End If

        For i = lastRow To 1 Step -1
            Dim yCellValue As String
            yCellValue = Trim(CStr(ws.Cells(i, COL_Y_DOUJI).Value))

            If regExY.Test(yCellValue) And regExAG.Test(Trim(CStr(ws.Cells(i, COL_AG_HINBAN).Value))) Then
                childHeaderRow = i
                
                Set matches = regExY.Execute(yCellValue)
                If matches(0).SubMatches(0) <> "" Then
                    hinbanToFind = matches(0).SubMatches(0)
                Else
                    hinbanToFind = matches(0).SubMatches(1)
                End If

                parentHeaderRow = FindParentHeaderRow(ws, hinbanToFind)

                If parentHeaderRow > 0 Then
                    parentBlockEndRow = FindEndOfBlock(ws, parentHeaderRow, regExAG, regExY)
                    
                    If parentBlockEndRow + 1 <> childHeaderRow Then
                        childBlockEndRow = FindEndOfBlock(ws, childHeaderRow, regExAG, regExY)
                        
                        ' 行を移動する前に、移動先が自分自身の中ではないことを確認 (念のための安全策)
                        If Not (childHeaderRow <= parentBlockEndRow And childBlockEndRow >= parentBlockEndRow) Then
                            ws.Rows(childHeaderRow & ":" & childBlockEndRow).Cut
                            ws.Rows(parentBlockEndRow + 1).Insert Shift:=xlDown
                            Application.CutCopyMode = False
                            
                            movedInPass = True
                            Exit For
                        End If
                    End If
                Else
                    Debug.Print "SortDouji: Y列" & i & "行目の親品番「" & hinbanToFind & "」が見つかりません。"
                End If
            End If
        Next i
        
    Loop While movedInPass

Finally_SortDouji:
    ' ★★★変更点5: ステータスバーをクリアする★★★
    Application.StatusBar = False
    Application.ScreenUpdating = True
    Set regExY = Nothing
    Set regExAG = Nothing
    Set ws = Nothing
    Exit Sub
ErrorHandler_SortDouji:
    MsgBox "「同時」工程のグループ化処理中にエラーが発生しました。" & vbCrLf & Err.Description, vbCritical
    Resume Finally_SortDouji
End Sub

' ====================================================================================
' 補助関数： 親品番のヘッダー行を探す
' ====================================================================================
Private Function FindParentHeaderRow(ws As Worksheet, hinbanToFind As String) As Long
    Dim j As Long, lastRow As Long
    Dim agCellValue As String, yCellValue As String
    Dim hinbanInAG As String
    Dim regExAG As Object, regExY As Object
    
    Set regExAG = CreateObject("VBScript.RegExp")
    regExAG.pattern = "^(\d+)"
    Set regExY = CreateObject("VBScript.RegExp")
    regExY.pattern = "(\d+)と?同時|同時(\d+)"
    
    lastRow = ws.Cells(Rows.Count, COL_AG_HINBAN).End(xlUp).Row
    FindParentHeaderRow = 0

    For j = 1 To lastRow
        agCellValue = Trim(CStr(ws.Cells(j, COL_AG_HINBAN).Value))
        yCellValue = Trim(CStr(ws.Cells(j, COL_Y_DOUJI).Value))
        hinbanInAG = ""
        
        If regExAG.Test(agCellValue) Then
            hinbanInAG = regExAG.Execute(agCellValue)(0).SubMatches(0)
        End If
        
        ' AG列の品番が一致し、Y列に「同時」がない行が親ヘッダー
        If hinbanInAG = hinbanToFind And Not regExY.Test(yCellValue) Then
            FindParentHeaderRow = j
            Exit Function
        End If
    Next j
End Function

' ====================================================================================
' 補助関数： 指定されたヘッダー行から始まるブロックの最終行を探す
' ====================================================================================
Private Function FindEndOfBlock(ws As Worksheet, ByVal startRow As Long, regExAG As Object, regExY As Object) As Long
    Dim i As Long
    Dim lastRow As Long
    
    lastRow = ws.Cells(Rows.Count, COL_AG_HINBAN).End(xlUp).Row
    If ws.Cells(Rows.Count, COL_Y_DOUJI).End(xlUp).Row > lastRow Then
        lastRow = ws.Cells(Rows.Count, COL_Y_DOUJI).End(xlUp).Row
    End If
    
    FindEndOfBlock = startRow ' デフォルトは開始行自身

    For i = startRow + 1 To lastRow + 1
        If i > lastRow Then
            FindEndOfBlock = lastRow
            Exit Function
        End If
        
        Dim agValue As String
        Dim yValue As String
        agValue = Trim(CStr(ws.Cells(i, COL_AG_HINBAN).Value))
        yValue = Trim(CStr(ws.Cells(i, COL_Y_DOUJI).Value))

        ' 次のブロックの開始条件（AGに品番があり、Yに「同時」がない）に合致したら、その手前が最終行
        If regExAG.Test(agValue) And Not regExY.Test(yValue) Then
            FindEndOfBlock = i - 1
            Exit Function
        End If
    Next i
End Function


' ====================================================================================
' 修正版のマクロ (ステップ2)
' グループ化されたブロック内で、AG列の品番順に並べ替える
' ====================================================================================
Sub SortGroupedItemsByTheirOwnAG()
    Dim ws As Worksheet
    Dim lastRelevantRow As Long
    Dim r As Long, i As Long, k As Long, m As Long
    Dim mainAGValue As String
    Dim isParentItemRow As Boolean
    Dim regExAG As Object, regExY As Object
    Dim blockItems() As Variant, blockItemCount As Long
    Dim itemDataContents() As Variant
    Dim numColsToProcess As Long
    Dim sortKeyAsLong As Long
    Dim blockActualStartRow As Long, blockActualEndRow As Long
        
    On Error GoTo ErrorHandler_SortGroupedItems
    Set ws = ThisWorkbook.Sheets(SHEET_KOUTEIHYO_NAME)
    
    Application.ScreenUpdating = False
    Set regExAG = CreateObject("VBScript.RegExp")
    regExAG.pattern = "^(\d+)"
    Set regExY = CreateObject("VBScript.RegExp")
    regExY.pattern = "(\d+)と?同時|同時(\d+)"
    
    numColsToProcess = ws.Cells.SpecialCells(xlCellTypeLastCell).Column

    lastRelevantRow = ws.Cells(Rows.Count, COL_AG_HINBAN).End(xlUp).Row
    If ws.Cells(Rows.Count, COL_Y_DOUJI).End(xlUp).Row > lastRelevantRow Then
        lastRelevantRow = ws.Cells(Rows.Count, COL_Y_DOUJI).End(xlUp).Row
    End If

    r = 1
    Do While r <= lastRelevantRow
        mainAGValue = Trim(CStr(ws.Cells(r, COL_AG_HINBAN).Value))
        isParentItemRow = regExAG.Test(mainAGValue) And _
                          (Not regExY.Test(Trim(CStr(ws.Cells(r, COL_Y_DOUJI).Value))))

        If isParentItemRow Then
            blockItemCount = 0
            Erase blockItems
            
            blockActualStartRow = r + 1
            blockActualEndRow = r

            For i = blockActualStartRow To lastRelevantRow + 1
                If i > lastRelevantRow Then GoTo ProcessBlock
                Dim currentYValue As String, currentAGValue As String
                currentYValue = Trim(CStr(ws.Cells(i, COL_Y_DOUJI).Value))
                currentAGValue = Trim(CStr(ws.Cells(i, COL_AG_HINBAN).Value))

                If Not regExY.Test(currentYValue) Then Exit For
                If regExAG.Test(currentAGValue) And (Not regExY.Test(currentYValue)) Then Exit For
                
                Dim agKeyToSortBy As String
                If regExAG.Test(currentAGValue) Then
                    agKeyToSortBy = regExAG.Execute(currentAGValue)(0).SubMatches(0)
                Else
                    agKeyToSortBy = ""
                End If
                
                sortKeyAsLong = 9999999 ' デフォルト値
                If IsNumeric(agKeyToSortBy) And agKeyToSortBy <> "" Then
                    On Error Resume Next ' 番号がLongの最大値を超える場合などを考慮
                    sortKeyAsLong = CLng(agKeyToSortBy)
                    If Err.Number <> 0 Then
                        sortKeyAsLong = 9999999 ' エラー時はデフォルト値に戻す
                        Err.Clear
                    End If
                    On Error GoTo ErrorHandler_SortGroupedItems
                End If

                ReDim itemDataContents(1 To numColsToProcess)
                For k = 1 To numColsToProcess: itemDataContents(k) = ws.Cells(i, k).Value: Next k
                
                blockItemCount = blockItemCount + 1
                ReDim Preserve blockItems(1 To blockItemCount)
                blockItems(blockItemCount) = Array(sortKeyAsLong, itemDataContents)
                
                blockActualEndRow = i
            Next i
ProcessBlock:
            If blockItemCount > 1 Then
                Dim item1 As Variant, item2 As Variant, tempItem As Variant
                For k = 1 To blockItemCount - 1
                    For m = k + 1 To blockItemCount
                        If CLng(blockItems(k)(0)) > CLng(blockItems(m)(0)) Then
                            tempItem = blockItems(k): blockItems(k) = blockItems(m): blockItems(m) = tempItem
                        End If
                    Next m
                Next k
                
                For k = 1 To blockItemCount
                    For m = 1 To numColsToProcess
                        ws.Cells(blockActualStartRow + k - 1, m).Value = blockItems(k)(1)(m)
                    Next m
                Next k
            End If
            
            If blockActualEndRow > r Then r = blockActualEndRow
        End If
        r = r + 1
    Loop

Finally_SortGroupedItems:
    Application.ScreenUpdating = True
    Set ws = Nothing: Set regExAG = Nothing: Set regExY = Nothing
    Exit Sub

ErrorHandler_SortGroupedItems:
    MsgBox "並べ替え処理中にエラーが発生しました。" & vbCrLf & Err.Description, vbCritical
    Resume Finally_SortGroupedItems
End Sub

